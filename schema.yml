openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/me/budgets/:
    get:
      operationId: users_me_budgets_list
      description: ViewSet for viewing and editing budgets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBudgetList'
          description: ''
    post:
      operationId: users_me_budgets_create
      description: ViewSet for viewing and editing budgets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Budget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Budget'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
  /api/users/me/budgets/{id}/:
    get:
      operationId: users_me_budgets_retrieve
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    put:
      operationId: users_me_budgets_update
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Budget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Budget'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    patch:
      operationId: users_me_budgets_partial_update
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    delete:
      operationId: users_me_budgets_destroy
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/me/shared-budgets/:
    get:
      operationId: users_me_shared_budgets_list
      description: ViewSet for viewing and editing budgets.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBudgetList'
          description: ''
    post:
      operationId: users_me_shared_budgets_create
      description: ViewSet for viewing and editing budgets.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Budget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Budget'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
  /api/users/me/shared-budgets/{id}/:
    get:
      operationId: users_me_shared_budgets_retrieve
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    put:
      operationId: users_me_shared_budgets_update
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Budget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Budget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Budget'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    patch:
      operationId: users_me_shared_budgets_partial_update
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBudget'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
          description: ''
    delete:
      operationId: users_me_shared_budgets_destroy
      description: ViewSet for viewing and editing budgets.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Budget:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        shared_accounts:
          type: array
          items:
            type: integer
        income:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/BudgetInputExpense'
      required:
      - created_at
      - id
      - income
      - name
    BudgetInputExpense:
      type: object
      properties:
        amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        category:
          $ref: '#/components/schemas/CategoryEnum'
      required:
      - amount
      - category
    CategoryEnum:
      enum:
      - EDUCATION
      - HOME
      - TRAVEL
      - CLOTHING
      - FOOD
      - SAVINGS
      - ENTERTAINMENT
      type: string
    PaginatedBudgetList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Budget'
    PatchedBudget:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        shared_accounts:
          type: array
          items:
            type: integer
        income:
          type: string
          format: decimal
          pattern: ^-?\d{0,17}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/BudgetInputExpense'
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
